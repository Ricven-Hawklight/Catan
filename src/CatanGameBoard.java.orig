import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.SwingUtilities;

import javax.swing.JPanel;

public class CatanGameBoard extends JPanel { 
    static Dimension screenSize;
    Polygon[] polygons = new Polygon[19];

	public void paintComponent(Graphics g) {
        super.paintComponent(g);
        polygons[0] = makeHexagon(0, 400 * Math.sin(Math.PI/3));

<<<<<<< 13102bbb310fd6140f791586158823f880c08e36
        for (int i = 0; i < 2; i++) {
            polygons[i + 1] = makeHexagon(-150 + i * 300, 300 * Math.sin(Math.PI/3));
=======
        //g.translate( screenSize.width/2, screenSize.height/2);
        
        Polygon p1 = new Polygon();
        for (int i = 0; i < 6; i++) {
            p1.addPoint((int) (screenSize.width/2 + 100 * Math.cos(i * 2 * Math.PI / 6)),
          (int) ((screenSize.height/2) + 100 * Math.sin(i * 2 * Math.PI / 6)));
>>>>>>> Make scroll bars work
        }

        for (int i = 0; i < 3; i++) {
            polygons[i + 3] = makeHexagon(-300 + i * 300, 200 * Math.sin(Math.PI/3));
        }

        for (int i = 0; i < 2; i++) {
            polygons[i + 6] = makeHexagon(-150 + i * 300, 100 * Math.sin(Math.PI/3));
        }

        for (int i = 0; i < 3; i++) {
            polygons[i + 8] = makeHexagon(-300 + i * 300,0);
        }

        for (int i = 0; i < 2; i++) {
            polygons[i + 11] = makeHexagon(-150 + i * 300, -100 * Math.sin(Math.PI/3));
        }

        for (int i = 0; i < 3; i++) {
            polygons[i + 13] = makeHexagon(-300 + i * 300, -200 * Math.sin(Math.PI/3));
        }

        for (int i = 0; i < 2; i++) {
            polygons[i + 16] = makeHexagon(-150 + i * 300, -300 * Math.sin(Math.PI/3));
        }

        polygons[18] = makeHexagon(0, -400 * Math.sin(Math.PI/3));

        for (int j = 0; j < 19; j++) {
            g.drawPolygon(polygons[j]);
        }
<<<<<<< 13102bbb310fd6140f791586158823f880c08e36
=======

        g.drawPolygon(p10);
        polygons[9] = p10;

        Polygon p11 = new Polygon();
        for (int i = 0; i < 6; i++) {
            p11.addPoint((int) (screenSize.width/2 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 + 4 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));
        }

        g.drawPolygon(p11);
        polygons[10] = p11;

        Polygon p12 = new Polygon();
        for (int i = 0; i < 6; i++)
            p12.addPoint((int) (screenSize.width/2 + 300 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 + 2 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p12);
        polygons[11] = p12;

        Polygon p13 = new Polygon();
        for (int i = 0; i < 6; i++)
            p13.addPoint((int) (screenSize.width/2 + 300 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 - 2 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p13);
        polygons[12] = p13;

        Polygon p14 = new Polygon();
        for (int i = 0; i < 6; i++)
            p14.addPoint((int) ((screenSize.width/2 - 150) - 150 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 + 2 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p14);
        polygons[13] = p14;

        Polygon p15 = new Polygon();
        for (int i = 0; i < 6; i++)
            p15.addPoint((int) ((screenSize.width/2 - 150) - 150 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 - 2 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p15);
        polygons[14] = p15;

        Polygon p16 = new Polygon();
        for (int i = 0; i < 6; i++)
            p16.addPoint((int) (screenSize.width/2 + 150 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 + 3 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p16);
        polygons[15] = p16;

        Polygon p17 = new Polygon();
        for (int i = 0; i < 6; i++)
            p17.addPoint((int) (screenSize.width/2 + 150 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 - 3 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p17);
        polygons[16] = p17;

        Polygon p18 = new Polygon();
        for (int i = 0; i < 6; i++)
            p18.addPoint((int) (screenSize.width/2 -150 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 + 3 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p18);
        polygons[17] = p18;

        Polygon p19 = new Polygon();
        for (int i = 0; i < 6; i++)
            p19.addPoint((int) (screenSize.width/2 -150 + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 - 3 * 50 * Math.sqrt(3)) + 100 * Math.sin(i * 2 * Math.PI / 6)));

        g.drawPolygon(p19);
        polygons[18] = p19;
        

        polygons[0] = makeHexagon(0, 200 * Math.sin(Math.PI/3));
        g.drawPolygon(polygons[0]);
>>>>>>> Make scroll bars work
	}

    public static Polygon makeHexagon(double x, double y) {
        Polygon p = new Polygon();
        for (int i = 0; i < 6; i++)
            p.addPoint((int) (screenSize.width/2 + x + 100 * Math.cos(i * 2 * Math.PI / 6)),
                    (int) ((screenSize.height/2 + y + 100 * Math.sin(i * 2 * Math.PI / 6))));
        return p;
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame();
        //JScrollPane scrollPane = new JScrollPane(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        JPanel panel = new JPanel();
        frame.setTitle("Catan");
        screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frame.setLocationRelativeTo(null);
        frame.addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                System.exit(0);
            }
        });
        Container contentPane = new Container();
        //panel = frame.getContentPane();
        //contentPane.add(new CatanGameBoard());
        JScrollPane scrollPane = new JScrollPane(new CatanGameBoard()); 
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);  
        //scrollPane.setHorizontalScrollBar(scrollPane.createHorizontalScrollBar());
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS); 
        //scrollPane.setVerticalScrollBar(scrollPane.createVerticalScrollBar());
        frame.getContentPane().add("Center", scrollPane); 
        frame.setSize(screenSize.width, screenSize.height);
        frame.setVisible(true);
        frame.show();
    }
}